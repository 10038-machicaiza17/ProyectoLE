{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\LyE\\\\proyecto\\\\templates\\\\frontend\\\\src\\\\landing-page\\\\components\\\\Highlights.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Highlights() {\n  _s();\n  const [imagesToDisplay, setImagesToDisplay] = useState([]);\n  const [finalScore, setFinalScore] = useState(null);\n  const executeScriptAndShowResults = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/run_deep_face_script');\n      const {\n        images_to_display,\n        final_score\n      } = response.data;\n\n      // Actualizar el estado con las imágenes y el resultado\n      setImagesToDisplay(images_to_display);\n      setFinalScore(final_score);\n\n      // Hacer algo con las imágenes y el resultado, por ejemplo, mostrar en la consola\n      console.log('Imágenes a mostrar:', images_to_display);\n      console.log('Resultado final:', final_score);\n    } catch (error) {\n      console.error('Error al ejecutar el script:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"highlights\",\n    sx: {\n      pt: {\n        xs: 4,\n        sm: 12\n      },\n      pb: {\n        xs: 8,\n        sm: 16\n      },\n      color: 'white',\n      bgcolor: '#06090a'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: {\n          xs: 3,\n          sm: 6\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            sm: '100%',\n            md: '60%'\n          },\n          textAlign: {\n            sm: 'left',\n            md: 'center'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h4\",\n          children: \"Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            color: 'grey.400'\n          },\n          children: [\"A continuacion se presentan los resultados obtenidos en la grabaci\\xF3n de la c\\xE1mara.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 95\n          }, this), \"Dale click al boton para obtener los resultados.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), imagesToDisplay.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Im\\xE1genes a mostrar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), imagesToDisplay.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/static/${imagePath}`,\n          alt: `Imagen ${index}`,\n          style: {\n            width: '100%',\n            marginBottom: '10px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), finalScore !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Resultado final:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: finalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: executeScriptAndShowResults,\n        children: \"Ejecutar Script\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Highlights, \"g5HOx20l7DgVbOghQ2uncVDg4BY=\");\n_c = Highlights;\nvar _c;\n$RefreshReg$(_c, \"Highlights\");","map":{"version":3,"names":["React","useState","axios","Box","Container","Typography","Button","jsxDEV","_jsxDEV","Highlights","_s","imagesToDisplay","setImagesToDisplay","finalScore","setFinalScore","executeScriptAndShowResults","response","post","images_to_display","final_score","data","console","log","error","id","sx","pt","xs","sm","pb","color","bgcolor","children","position","display","flexDirection","alignItems","gap","width","md","textAlign","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","map","imagePath","index","src","alt","style","marginBottom","onClick","_c","$RefreshReg$"],"sources":["C:/temp/LyE/proyecto/templates/frontend/src/landing-page/components/Highlights.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nexport default function Highlights() {\n  const [imagesToDisplay, setImagesToDisplay] = useState([]);\n  const [finalScore, setFinalScore] = useState(null);\n\n  const executeScriptAndShowResults = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/run_deep_face_script');\n      const { images_to_display, final_score } = response.data;\n\n      // Actualizar el estado con las imágenes y el resultado\n      setImagesToDisplay(images_to_display);\n      setFinalScore(final_score);\n\n      // Hacer algo con las imágenes y el resultado, por ejemplo, mostrar en la consola\n      console.log('Imágenes a mostrar:', images_to_display);\n      console.log('Resultado final:', final_score);\n    } catch (error) {\n      console.error('Error al ejecutar el script:', error);\n    }\n  };\n\n  return (\n    <Box\n      id=\"highlights\"\n      sx={{\n        pt: { xs: 4, sm: 12 },\n        pb: { xs: 8, sm: 16 },\n        color: 'white',\n        bgcolor: '#06090a',\n      }}\n    >\n      <Container\n        sx={{\n          position: 'relative',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: { xs: 3, sm: 6 },\n        }}\n      >\n        <Box\n          sx={{\n            width: { sm: '100%', md: '60%' },\n            textAlign: { sm: 'left', md: 'center' },\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\">\n            Resultados\n          </Typography>\n          <Typography variant=\"body1\" sx={{ color: 'grey.400' }}>\n            A continuacion se presentan los resultados obtenidos en la grabación de la cámara.<br></br>\n            Dale click al boton para obtener los resultados.\n          </Typography>\n        </Box>\n\n        {/* Renderizar las imágenes y el resultado */}\n        {imagesToDisplay.length > 0 && (\n          <div>\n            <Typography variant=\"h6\">Imágenes a mostrar:</Typography>\n            {imagesToDisplay.map((imagePath, index) => (\n              <img key={index} src={`http://localhost:5000/static/${imagePath}`} alt={`Imagen ${index}`} style={{ width: '100%', marginBottom: '10px' }} />\n            ))}\n          </div>\n        )}\n\n\n        {finalScore !== null && (\n          <div>\n            <Typography variant=\"h6\">Resultado final:</Typography>\n            <Typography variant=\"body2\">{finalScore}</Typography>\n          </div>\n        )}\n\n        <button onClick={executeScriptAndShowResults}>Ejecutar Script</button>\n      </Container>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}