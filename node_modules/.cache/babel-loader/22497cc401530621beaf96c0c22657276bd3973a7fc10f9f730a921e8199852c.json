{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\LyE\\\\proyecto\\\\templates\\\\frontend\\\\src\\\\landing-page\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport AutoAwesomeRoundedIcon from '@mui/icons-material/AutoAwesomeRounded';\n// import SvgMaterialDesign from './SvgMaterialDesign';\nimport AppAppBar from './components/AppAppBar';\nimport Hero from './components/Hero';\nimport Highlights from './components/Highlights';\nimport Footer from './components/Footer';\nimport getLPTheme from './getLPTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTheme = createTheme({});\nfunction ToggleCustomTheme({\n  showCustomTheme,\n  toggleCustomTheme\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100dvw',\n      position: 'fixed',\n      bottom: 24\n    },\n    children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      color: \"primary\",\n      exclusive: true,\n      value: showCustomTheme,\n      onChange: toggleCustomTheme,\n      \"aria-label\": \"Platform\",\n      sx: {\n        backgroundColor: 'background.default',\n        '& .Mui-selected': {\n          pointerEvents: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: true,\n        children: [/*#__PURE__*/_jsxDEV(AutoAwesomeRoundedIcon, {\n          sx: {\n            fontSize: '20px',\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \"Custom theme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: false,\n        children: \"Material Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = ToggleCustomTheme;\nToggleCustomTheme.propTypes = {\n  showCustomTheme: PropTypes.shape({\n    valueOf: PropTypes.func.isRequired\n  }).isRequired,\n  toggleCustomTheme: PropTypes.func.isRequired\n};\nexport default function LandingPage() {\n  _s();\n  const [mode, setMode] = React.useState('dark');\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n  const LPtheme = createTheme(getLPTheme(mode));\n  const toggleColorMode = () => {\n    setMode(prev => prev === 'dark' ? 'light' : 'dark');\n  };\n  const toggleCustomTheme = () => {\n    setShowCustomTheme(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: showCustomTheme ? LPtheme : defaultTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAppBar, {\n      mode: mode,\n      toggleColorMode: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Highlights, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleCustomTheme, {\n      showCustomTheme: showCustomTheme,\n      toggleCustomTheme: toggleCustomTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(LandingPage, \"3TRFUxL8SnR8sz8swqY97IpB3nE=\");\n_c2 = LandingPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleCustomTheme\");\n$RefreshReg$(_c2, \"LandingPage\");","map":{"version":3,"names":["React","PropTypes","CssBaseline","Box","Divider","ThemeProvider","createTheme","ToggleButton","ToggleButtonGroup","AutoAwesomeRoundedIcon","AppAppBar","Hero","Highlights","Footer","getLPTheme","jsxDEV","_jsxDEV","defaultTheme","ToggleCustomTheme","showCustomTheme","toggleCustomTheme","sx","display","flexDirection","alignItems","width","position","bottom","children","color","exclusive","value","onChange","backgroundColor","pointerEvents","fontSize","mr","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","shape","valueOf","func","isRequired","LandingPage","_s","mode","setMode","useState","setShowCustomTheme","LPtheme","toggleColorMode","prev","theme","bgcolor","_c2","$RefreshReg$"],"sources":["C:/temp/LyE/proyecto/templates/frontend/src/landing-page/LandingPage.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport AutoAwesomeRoundedIcon from '@mui/icons-material/AutoAwesomeRounded';\n// import SvgMaterialDesign from './SvgMaterialDesign';\nimport AppAppBar from './components/AppAppBar';\nimport Hero from './components/Hero';\nimport Highlights from './components/Highlights';\nimport Footer from './components/Footer';\nimport getLPTheme from './getLPTheme';\n\nconst defaultTheme = createTheme({});\n\nfunction ToggleCustomTheme({ showCustomTheme, toggleCustomTheme }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100dvw',\n        position: 'fixed',\n        bottom: 24,\n      }}\n    >\n      <ToggleButtonGroup\n        color=\"primary\"\n        exclusive\n        value={showCustomTheme}\n        onChange={toggleCustomTheme}\n        aria-label=\"Platform\"\n        sx={{\n          backgroundColor: 'background.default',\n          '& .Mui-selected': {\n            pointerEvents: 'none',\n          },\n        }}\n      >\n        <ToggleButton value>\n          <AutoAwesomeRoundedIcon sx={{ fontSize: '20px', mr: 1 }} />\n          Custom theme\n        </ToggleButton>\n        <ToggleButton value={false}>\n          {/* <SvgMaterialDesign sx={{ fontSize: '20px', mr: 1 }} /> */}\n          Material Design\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n\nToggleCustomTheme.propTypes = {\n  showCustomTheme: PropTypes.shape({\n    valueOf: PropTypes.func.isRequired,\n  }).isRequired,\n  toggleCustomTheme: PropTypes.func.isRequired,\n};\n\nexport default function LandingPage() {\n  const [mode, setMode] = React.useState('dark');\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n  const LPtheme = createTheme(getLPTheme(mode));\n\n  const toggleColorMode = () => {\n    setMode((prev) => (prev === 'dark' ? 'light' : 'dark'));\n  };\n\n  const toggleCustomTheme = () => {\n    setShowCustomTheme((prev) => !prev);\n  };\n\n  return (\n    <ThemeProvider theme={showCustomTheme ? LPtheme : defaultTheme}>\n      <CssBaseline />\n      <AppAppBar mode={mode} toggleColorMode={toggleColorMode} />\n      <Hero />\n      <Box sx={{ bgcolor: 'background.default' }}>\n        <Highlights />\n        <Divider />\n        <Footer />\n      </Box>\n      <ToggleCustomTheme\n        showCustomTheme={showCustomTheme}\n        toggleCustomTheme={toggleCustomTheme}\n      />\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}